package com.matheducation.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MaterialAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMaterialAllPropertiesEquals(Material expected, Material actual) {
        assertMaterialAutoGeneratedPropertiesEquals(expected, actual);
        assertMaterialAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMaterialAllUpdatablePropertiesEquals(Material expected, Material actual) {
        assertMaterialUpdatableFieldsEquals(expected, actual);
        assertMaterialUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMaterialAutoGeneratedPropertiesEquals(Material expected, Material actual) {
        assertThat(expected)
            .as("Verify Material auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMaterialUpdatableFieldsEquals(Material expected, Material actual) {
        assertThat(expected)
            .as("Verify Material relevant properties")
            .satisfies(e -> assertThat(e.getTitle()).as("check title").isEqualTo(actual.getTitle()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getContent()).as("check content").isEqualTo(actual.getContent()))
            .satisfies(e -> assertThat(e.getSlug()).as("check slug").isEqualTo(actual.getSlug()))
            .satisfies(e -> assertThat(e.getOrderIndex()).as("check orderIndex").isEqualTo(actual.getOrderIndex()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMaterialUpdatableRelationshipsEquals(Material expected, Material actual) {
        assertThat(expected)
            .as("Verify Material relationships")
            .satisfies(e -> assertThat(e.getLesson()).as("check lesson").isEqualTo(actual.getLesson()))
            .satisfies(e -> assertThat(e.getParent()).as("check parent").isEqualTo(actual.getParent()));
    }
}
